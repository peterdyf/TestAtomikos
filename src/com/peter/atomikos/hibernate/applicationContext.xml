<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.peter.atomikos.hibernate" />

	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="ds1" />
		<property name="xaDataSourceClassName" value="org.apache.derby.jdbc.EmbeddedXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="databaseName">memory:testDB1;create=true</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="ds2" />
		<property name="xaDataSourceClassName" value="org.apache.derby.jdbc.EmbeddedXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="databaseName">memory:testDB2;create=true</prop>
			</props>
		</property>
	</bean>

	<jdbc:initialize-database data-source="dataSource1">
		<jdbc:script location="classpath:com/peter/atomikos/createDB.sql" />
	</jdbc:initialize-database>
	
	<jdbc:initialize-database data-source="dataSource2">
		<jdbc:script location="classpath:com/peter/atomikos/createDB.sql" />
	</jdbc:initialize-database>
	
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
        init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false" />
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="transactionManager"
        class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" />
	
	<!--Hibernate SessionFatory-->
	<bean id="sessionFactory1"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
	    <property name="packagesToScan" value="com.peter.atomikos.hibernate" /> 
	          
        <property name="hibernateProperties">		    
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.transaction.factory_class"> 
	               org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory 
	            </prop> 
	            <prop key="hibernate.transaction.manager_lookup_class"> 
	                 com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup 
	             </prop> 
			</props>
		</property>
	</bean>
	
	<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
	    <property name="packagesToScan" value="com.peter.atomikos.hibernate" />      
        <property name="hibernateProperties">		    
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.transaction.factory_class"> 
	               org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory 
	            </prop> 
	            <prop key="hibernate.transaction.manager_lookup_class"> 
	                 com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup 
	             </prop> 
			</props>
		</property>
	</bean>


</beans>

